{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { getFirebase } from 'react-redux-firebase';\nimport thunk from 'redux-thunk';\nimport rootReducer from './../redux/reducers/index';\nimport fbConfig from '../lib/database/config/fbConfig';\nvar initialState = {};\nexport var newStore = function newStore() {\n  return createStore(rootReducer, initialState, compose(applyMiddleware(thunk.withExtraArgument({\n    getFirebase: getFirebase,\n    getFirestore: getFirestore\n  })), reduxFirestore(fbConfig)));\n};\nexport var wrapper = createWrapper(newStore, {\n  debug: true\n});","map":{"version":3,"sources":["/Users/vaisan/Downloads/paw-centre/redux/index.js"],"names":["createStore","applyMiddleware","compose","createWrapper","reduxFirestore","getFirestore","getFirebase","thunk","rootReducer","fbConfig","initialState","newStore","withExtraArgument","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,IAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC5B,SAAOX,WAAW,CAChBQ,WADgB,EAEhBE,YAFgB,EAGhBR,OAAO,CACLD,eAAe,CAACM,KAAK,CAACK,iBAAN,CAAwB;AAAEN,IAAAA,WAAW,EAAXA,WAAF;AAAeD,IAAAA,YAAY,EAAZA;AAAf,GAAxB,CAAD,CADV,EAELD,cAAc,CAACK,QAAD,CAFT,CAHS,CAAlB;AAQD,CATM;AAWP,OAAO,IAAMI,OAAO,GAAGV,aAAa,CAACQ,QAAD,EAAW;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAX,CAA7B","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { getFirebase } from 'react-redux-firebase';\nimport thunk from 'redux-thunk';\nimport rootReducer from './../redux/reducers/index';\nimport fbConfig from '../lib/database/config/fbConfig';\n\nconst initialState = {};\n\nexport const newStore = () => {\n  return createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(fbConfig)\n    )\n  );\n};\n\nexport const wrapper = createWrapper(newStore, { debug: true });\n"]},"metadata":{},"sourceType":"module"}