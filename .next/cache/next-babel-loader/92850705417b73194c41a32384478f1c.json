{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/vaisan/Downloads/paw-centre/pages/shop/shop.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ShopDisplay from '../../components/shop/ShopDisplay';\nimport { loadFirebase } from '../../lib/database/config/fbConfig.js';\nimport { connect } from 'react-redux';\nimport action from '../../redux/actions/index.js';\nimport Router from 'next/router';\nimport _getFirestoreData from '../../redux/actions/storeActions.js';\n\nvar Shop = /*#__PURE__*/function (_React$Component) {\n  _inherits(Shop, _React$Component);\n\n  var _super = _createSuper(Shop);\n\n  function Shop(props) {\n    _classCallCheck(this, Shop);\n\n    return _super.call(this, props);\n  } //gets initial data from firestore and stores it into props\n\n\n  _createClass(Shop, [{\n    key: \"render\",\n    value: function render() {\n      var products = this.props.products;\n      console.log('products', products);\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, \"Shop route page\", __jsx(ShopDisplay, {\n        products: products,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // let firebase = await loadFirebase();\n                // let result = await new Promise((resolve, reject) => {\n                //   firebase\n                //     .firestore()\n                //     .collection('products')\n                //     .get()\n                //     .then((snapshot) => {\n                //       let data = [];\n                //       snapshot.forEach((doc) => {\n                //         data.push(\n                //           Object.assign(\n                //             {\n                //               id: doc.id\n                //             },\n                //             doc.data()\n                //           )\n                //         );\n                //       });\n                //       resolve(data);\n                //     })\n                //     .catch((error) => {\n                //       console.log(error);\n                //       reject([]);\n                //     });\n                // });\n                // return { products: result };\n                this.props.getFirestoreData();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Shop;\n}(React.Component); // to use an action, need to mapDispatchToProps and bring in the action to use from props video below at 7:22\n//https://www.youtube.com/watch?v=apg98RIJfJo&list=PL4cUxeGkcC9iWstfXntcj8f-dFZ4UtlN3&index=14\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getFirestoreData: function getFirestoreData() {\n      return dispatch(_getFirestoreData());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/vaisan/Downloads/paw-centre/pages/shop/shop.jsx"],"names":["React","ShopDisplay","loadFirebase","connect","action","Router","getFirestoreData","Shop","props","products","console","log","Component","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAAQC,YAAR,QAA2B,uCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,iBAAP,MAA6B,qCAA7B;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA,6BACVA,KADU;AAEjB,G,CACD;;;;;6BAgCS;AACP,UAAMC,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE,MAAC,WAAD;AAAa,QAAA,QAAQ,EAAEA,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;;;;;;AAvCC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,qBAAKD,KAAL,CAAWF,gBAAX;;;;;;;;;;;;;;;;;;;EAjCeN,KAAK,CAACY,S,GAgDzB;AACA;;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLR,IAAAA,gBAAgB,EAAE;AAAA,aAAMQ,QAAQ,CAACR,iBAAgB,EAAjB,CAAd;AAAA;AADb,GAAP;AAGD,CAJD;;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCN,IAAlC,CAAf","sourcesContent":["import React from 'react';\nimport ShopDisplay from '../../components/shop/ShopDisplay';\nimport {loadFirebase} from '../../lib/database/config/fbConfig.js';\nimport { connect } from 'react-redux';\nimport action from '../../redux/actions/index.js'\nimport Router from 'next/router'\nimport getFirestoreData from '../../redux/actions/storeActions.js'\n\nclass Shop extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  //gets initial data from firestore and stores it into props\n  static async getInitialProps() {\n    // let firebase = await loadFirebase();\n    // let result = await new Promise((resolve, reject) => {\n    //   firebase\n    //     .firestore()\n    //     .collection('products')\n    //     .get()\n    //     .then((snapshot) => {\n    //       let data = [];\n    //       snapshot.forEach((doc) => {\n    //         data.push(\n    //           Object.assign(\n    //             {\n    //               id: doc.id\n    //             },\n    //             doc.data()\n    //           )\n    //         );\n    //       });\n    //       resolve(data);\n    //     })\n    //     .catch((error) => {\n    //       console.log(error);\n    //       reject([]);\n    //     });\n    // });\n    // return { products: result };\n\n    this.props.getFirestoreData()\n  }\n\n  render() {\n    const products = this.props.products;\n    console.log('products', products);\n    return (\n      <div>\n        Shop route page\n        <ShopDisplay products={products}/>\n      </div>\n    );\n  }\n}\n\n// to use an action, need to mapDispatchToProps and bring in the action to use from props video below at 7:22\n//https://www.youtube.com/watch?v=apg98RIJfJo&list=PL4cUxeGkcC9iWstfXntcj8f-dFZ4UtlN3&index=14\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getFirestoreData: () => dispatch(getFirestoreData())\n  }\n}\nexport default connect(null, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}