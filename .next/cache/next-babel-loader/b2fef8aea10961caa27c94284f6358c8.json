{"ast":null,"code":"var _jsxFileName = \"/Users/vaisan/Downloads/paw-centre/pages/shop/shop.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ShopDisplay from '../../components/shop/ShopDisplay';\nimport { loadFirebase } from '../../lib/database/config/fbConfig.js';\nimport { connect } from 'react-redux';\nimport action from '../../redux/actions/index.js';\nimport Router from 'next/router';\nimport getFirestoreData from '../../redux/actions/storeActions.js';\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n  } //gets initial data from firestore and stores it into props\n\n\n  static async getInitialProps() {\n    // let firebase = await loadFirebase();\n    // let result = await new Promise((resolve, reject) => {\n    //   firebase\n    //     .firestore()\n    //     .collection('products')\n    //     .get()\n    //     .then((snapshot) => {\n    //       let data = [];\n    //       snapshot.forEach((doc) => {\n    //         data.push(\n    //           Object.assign(\n    //             {\n    //               id: doc.id\n    //             },\n    //             doc.data()\n    //           )\n    //         );\n    //       });\n    //       resolve(data);\n    //     })\n    //     .catch((error) => {\n    //       console.log(error);\n    //       reject([]);\n    //     });\n    // });\n    // return { products: result };\n    console.log('propps', this.props);\n    return this.props.getFirestoreData();\n  }\n\n  render() {\n    const products = this.props.products;\n    console.log('products', products);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, \"Shop route page\", __jsx(ShopDisplay, {\n      products: products,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // to use an action, need to mapDispatchToProps and bring in the action to use from props video below at 7:22\n//https://www.youtube.com/watch?v=apg98RIJfJo&list=PL4cUxeGkcC9iWstfXntcj8f-dFZ4UtlN3&index=14\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getFirestoreData: () => dispatch(getFirestoreData())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/vaisan/Downloads/paw-centre/pages/shop/shop.jsx"],"names":["React","ShopDisplay","loadFirebase","connect","action","Router","getFirestoreData","Shop","Component","constructor","props","getInitialProps","console","log","render","products","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAAQC,YAAR,QAA2B,uCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD,GAHgC,CAIjC;;;AACA,eAAaC,eAAb,GAA+B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKH,KAA3B;AACA,WAAO,KAAKA,KAAL,CAAWJ,gBAAX,EAAP;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,KAAKL,KAAL,CAAWK,QAA5B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,QAAxB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE,MAAC,WAAD;AAAa,MAAA,QAAQ,EAAEA,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA7CgC,C,CAgDnC;AACA;;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLX,IAAAA,gBAAgB,EAAE,MAAMW,QAAQ,CAACX,gBAAgB,EAAjB;AAD3B,GAAP;AAGD,CAJD;;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAOa,kBAAP,CAAP,CAAkCT,IAAlC,CAAf","sourcesContent":["import React from 'react';\nimport ShopDisplay from '../../components/shop/ShopDisplay';\nimport {loadFirebase} from '../../lib/database/config/fbConfig.js';\nimport { connect } from 'react-redux';\nimport action from '../../redux/actions/index.js'\nimport Router from 'next/router'\nimport getFirestoreData from '../../redux/actions/storeActions.js'\n\nclass Shop extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  //gets initial data from firestore and stores it into props\n  static async getInitialProps() {\n    // let firebase = await loadFirebase();\n    // let result = await new Promise((resolve, reject) => {\n    //   firebase\n    //     .firestore()\n    //     .collection('products')\n    //     .get()\n    //     .then((snapshot) => {\n    //       let data = [];\n    //       snapshot.forEach((doc) => {\n    //         data.push(\n    //           Object.assign(\n    //             {\n    //               id: doc.id\n    //             },\n    //             doc.data()\n    //           )\n    //         );\n    //       });\n    //       resolve(data);\n    //     })\n    //     .catch((error) => {\n    //       console.log(error);\n    //       reject([]);\n    //     });\n    // });\n    // return { products: result };\n    console.log('propps', this.props)\n    return this.props.getFirestoreData()\n  }\n\n  render() {\n    const products = this.props.products;\n    console.log('products', products);\n    return (\n      <div>\n        Shop route page\n        <ShopDisplay products={products}/>\n      </div>\n    );\n  }\n}\n\n// to use an action, need to mapDispatchToProps and bring in the action to use from props video below at 7:22\n//https://www.youtube.com/watch?v=apg98RIJfJo&list=PL4cUxeGkcC9iWstfXntcj8f-dFZ4UtlN3&index=14\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getFirestoreData: () => dispatch(getFirestoreData())\n  }\n}\nexport default connect(null, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}