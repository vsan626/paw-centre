{"ast":null,"code":"var _jsxFileName = \"/Users/vaisan/Downloads/paw-centre/components/shop/Shop.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"Shop Component\"));\n  }\n\n}\n\n; // Shop.propTypes = {\n//   storeItems: PropTypes.array.isRequired\n// }\n\nconst mapStateToProps = state => ({\n  storeItems: state.storeItems.items\n}); //use compose function to use two HOC (higher order components)\n\n\nexport default compose(connect(mapStateToProps), //automatically retrieves data from firestore when this component is active\nfirestoreConnect([{\n  collection: 'products'\n}]))(Shop);","map":{"version":3,"sources":["/Users/vaisan/Downloads/paw-centre/components/shop/Shop.jsx"],"names":["React","PropTypes","connect","firestoreConnect","compose","Shop","Component","constructor","props","state","componentDidMount","render","mapStateToProps","storeItems","items","collection"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG,CAEnB;;AAGDC,EAAAA,MAAM,GAAI;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF;AAMD;;AApBgC;;AAqBlC,C,CAED;AACA;AACA;;AAEA,MAAMC,eAAe,GAAGH,KAAK,KAAK;AAChCI,EAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,CAAiBC;AADG,CAAL,CAA7B,C,CAIA;;;AACA,eAAeV,OAAO,CACpBF,OAAO,CAACU,eAAD,CADa,EAEpB;AACAT,gBAAgB,CAAC,CACf;AAAEY,EAAAA,UAAU,EAAE;AAAd,CADe,CAAD,CAHI,CAAP,CAMbV,IANa,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nclass Shop extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n\n    }\n\n  }\n  componentDidMount() {\n\n  }\n\n\n  render () {\n    return (\n      <div>\n        <h1>Shop Component</h1>\n\n      </div>\n    );\n  }\n};\n\n// Shop.propTypes = {\n//   storeItems: PropTypes.array.isRequired\n// }\n\nconst mapStateToProps = state => ({\n  storeItems: state.storeItems.items\n})\n\n//use compose function to use two HOC (higher order components)\nexport default compose(\n  connect(mapStateToProps),\n  //automatically retrieves data from firestore when this component is active\n  firestoreConnect([\n    { collection: 'products'}\n  ])\n)(Shop);\n"]},"metadata":{},"sourceType":"module"}