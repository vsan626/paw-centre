{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport rootReducer from '../reducers/index';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from 'firebase/app';\nimport fbConfig from '../../lib/database/config/fbConfig'; // create a makeStore function\n\nconst initialState = {}; // const middleware = [thunk];\n\nconst makeStore = createStore(rootReducer, initialState, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(fbConfig))); // export an assembled wrapper\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["/Users/vaisan/Downloads/paw-centre/redux/store/store.js"],"names":["createStore","applyMiddleware","compose","createWrapper","rootReducer","thunk","createFirestoreInstance","reduxFirestore","getFirestore","ReactReduxFirebaseProvider","getFirebase","firebase","fbConfig","initialState","makeStore","withExtraArgument","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,uBAAT,EAAkCC,cAAlC,EAAkDC,YAAlD,QAAsE,iBAAtE;AACA,SAASC,0BAAT,EAAqCC,WAArC,QAAwD,sBAAxD;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,QAAP,MAAqB,oCAArB,C,CACA;;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CACA;;AAEA,MAAMC,SAAS,GAAGd,WAAW,CAC3BI,WAD2B,EAE3BS,YAF2B,EAG3BX,OAAO,CACLD,eAAe,CAACI,KAAK,CAACU,iBAAN,CAAwB;AAAEL,EAAAA,WAAF;AAAeF,EAAAA;AAAf,CAAxB,CAAD,CADV,EAELD,cAAc,CAACK,QAAD,CAFT,CAHoB,CAA7B,C,CASA;;AACA,OAAO,MAAMI,OAAO,GAAGb,aAAa,CAACW,SAAD,EAAY;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport rootReducer from '../reducers/index';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from 'firebase/app'\nimport fbConfig from '../../lib/database/config/fbConfig';\n// create a makeStore function\n\nconst initialState = {};\n// const middleware = [thunk];\n\nconst makeStore = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n  )\n);\n\n// export an assembled wrapper\nexport const wrapper = createWrapper(makeStore, { debug: true });\n"]},"metadata":{},"sourceType":"module"}