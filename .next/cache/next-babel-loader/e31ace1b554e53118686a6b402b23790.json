{"ast":null,"code":"var _jsxFileName = \"/Users/vaisan/Downloads/paw-centre/pages/shop/shop.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ShopDisplay from '../../components/shop/ShopDisplay'; // import {loadFirebase} from '../../lib/database/config/fbConfig.js';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n  } //gets initial data from firestore and stores it into props\n  // static async getInitialProps() {\n  //   let firebase = await loadFirebase();\n  //   let result = await new Promise((resolve, reject) => {\n  //     firebase\n  //       .firestore()\n  //       .collection('products')\n  //       .get()\n  //       .then((snapshot) => {\n  //         let data = [];\n  //         snapshot.forEach((doc) => {\n  //           data.push(\n  //             Object.assign(\n  //               {\n  //                 id: doc.id\n  //               },\n  //               doc.data()\n  //             )\n  //           );\n  //         });\n  //         resolve(data);\n  //       })\n  //       .catch((error) => {\n  //         console.log(error);\n  //         reject([]);\n  //       });\n  //   });\n  //   return { products: result };\n  // }\n\n\n  render() {\n    // const {storeItems} = this.state.props\n    // const products = this.props.products;\n    // console.log('products', products);\n    console.log('storeITEMMM', this.props.fireData.length);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, \"Shop route page\", __jsx(ShopDisplay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // const mapStateToProps = (state) => {\n//   console.log('statee in shop', state)\n//   return {\n//     storeItems: state.firestore.ordered.products\n//   }\n// }\n\n\nexport default compose(firestoreConnect(() => ['products']), connect(state => ({\n  fireData: state.firestore.data.products\n})))(Shop); // export default Shop","map":{"version":3,"sources":["/Users/vaisan/Downloads/paw-centre/pages/shop/shop.jsx"],"names":["React","ShopDisplay","PropTypes","connect","firestoreConnect","compose","Shop","Component","constructor","props","render","console","log","fireData","length","state","firestore","data","products"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mCAAxB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD,GAHgC,CAKjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,MAA/C;AACA,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF;AAOD;;AA9CgC,C,CAiDnC;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,OAAO,CACpBD,gBAAgB,CAAC,MAAM,CAAC,UAAD,CAAP,CADI,EAEpBD,OAAO,CAAEY,KAAD,KAAY;AAClBF,EAAAA,QAAQ,EAAEE,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBC;AADb,CAAZ,CAAD,CAFa,CAAP,CAKbZ,IALa,CAAf,C,CAMA","sourcesContent":["import React from 'react';\nimport ShopDisplay from '../../components/shop/ShopDisplay';\n// import {loadFirebase} from '../../lib/database/config/fbConfig.js';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nclass Shop extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  //gets initial data from firestore and stores it into props\n  // static async getInitialProps() {\n  //   let firebase = await loadFirebase();\n  //   let result = await new Promise((resolve, reject) => {\n  //     firebase\n  //       .firestore()\n  //       .collection('products')\n  //       .get()\n  //       .then((snapshot) => {\n  //         let data = [];\n  //         snapshot.forEach((doc) => {\n  //           data.push(\n  //             Object.assign(\n  //               {\n  //                 id: doc.id\n  //               },\n  //               doc.data()\n  //             )\n  //           );\n  //         });\n  //         resolve(data);\n  //       })\n  //       .catch((error) => {\n  //         console.log(error);\n  //         reject([]);\n  //       });\n  //   });\n  //   return { products: result };\n  // }\n  render() {\n    // const {storeItems} = this.state.props\n    // const products = this.props.products;\n    // console.log('products', products);\n    console.log('storeITEMMM', this.props.fireData.length)\n    return (\n      \n      <div>\n        Shop route page\n        <ShopDisplay />\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = (state) => {\n//   console.log('statee in shop', state)\n//   return {\n//     storeItems: state.firestore.ordered.products\n//   }\n// }\n\nexport default compose (\n  firestoreConnect(() => ['products']),\n  connect((state) => ({\n    fireData: state.firestore.data.products\n  })),\n)(Shop);\n// export default Shop\n"]},"metadata":{},"sourceType":"module"}