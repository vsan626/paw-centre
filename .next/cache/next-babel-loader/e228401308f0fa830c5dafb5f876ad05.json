{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nconst initialState = {\n  server: null,\n  client: null\n}; // create your reducer\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case SERVER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        server: action.payload\n      });\n\n    case CLIENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        client: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/vaisan/Downloads/paw-centre/redux/reducers/reducers.js"],"names":["HYDRATE","initialState","server","client","reducer","state","action","type","payload","SERVER","CLIENT"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB,C,CAKA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAL;AACE,6CAAYK,KAAZ,GAAsBC,MAAM,CAACE,OAA7B;;AACF,SAAKC,MAAL;AACE,6CAAYJ,KAAZ;AAAmBH,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAAlC;;AACF,SAAKE,MAAL;AACE,6CAAYL,KAAZ;AAAmBF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAAlC;;AACF;AACE,aAAOH,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\n\nconst initialState = {\n  server: null,\n  client: null\n}\n\n// create your reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return { ...state, ...action.payload };\n    case SERVER:\n      return { ...state, server: action.payload };\n    case CLIENT:\n      return { ...state, client: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}