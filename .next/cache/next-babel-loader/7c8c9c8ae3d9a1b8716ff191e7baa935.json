{"ast":null,"code":"var _jsxFileName = \"/Users/vaisan/Downloads/paw-centre/components/shop/Shop.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport firebase from '../../lib/database/config/fbConfig.js';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nclass Shop extends React.Component {\n  static async getInitialProps() {\n    let db = await firebase();\n    let result = await new Promise((resolve, reject) => {\n      db.firestore().collection('products').get().then(snapshot => {\n        console.log('snapshot', snapshot);\n        let data = [];\n        snapshot.forEach(doc => {\n          data.push(Object.assign({\n            id: doc.id\n          }, doc.data()));\n        });\n        resolve(snapshot);\n      }).catch(error => {\n        reject([]);\n      });\n    });\n    console.log('resultttt', result);\n    return {\n      products: result\n    };\n  }\n\n  render() {\n    const products = this.props.products;\n    console.log('asdfasdf', products);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Shop Component\"));\n  }\n\n}\n\n; // Shop.propTypes = {\n//   storeItems: PropTypes.array.isRequired\n// }\n// const mapStateToProps = state => {\n//   console.log('HI FROM STATE', state)\n//   return {\n//     storeItems: state.storeItems.storeItems\n//   }\n// }\n// //use compose function to use two HOC (higher order components)\n// export default compose(\n//   //automatically retrieves data from firestore when this component is active\n//   firestoreConnect(['products']),\n//   connect(mapStateToProps)\n// )(Shop);\n\nexport default Shop;","map":{"version":3,"sources":["/Users/vaisan/Downloads/paw-centre/components/shop/Shop.jsx"],"names":["React","firebase","PropTypes","connect","firestoreConnect","compose","Shop","Component","getInitialProps","db","result","Promise","resolve","reject","firestore","collection","get","then","snapshot","console","log","data","forEach","doc","push","Object","assign","id","catch","error","products","render","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AACjC,eAAaC,eAAb,GAA+B;AAC7B,QAAIC,EAAE,GAAG,MAAMR,QAAQ,EAAvB;AACA,QAAIS,MAAM,GAAG,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAClDJ,MAAAA,EAAE,CAACK,SAAH,GAAeC,UAAf,CAA0B,UAA1B,EACCC,GADD,GAECC,IAFD,CAEMC,QAAQ,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,YAAIG,IAAI,GAAG,EAAX;AACAH,QAAAA,QAAQ,CAACI,OAAT,CAAkBC,GAAD,IAAS;AACxBF,UAAAA,IAAI,CAACG,IAAL,CACEC,MAAM,CAACC,MAAP,CAAc;AACdC,YAAAA,EAAE,EAAEJ,GAAG,CAACI;AADM,WAAd,EAECJ,GAAG,CAACF,IAAJ,EAFD,CADF;AAKD,SAND;AAOAT,QAAAA,OAAO,CAACM,QAAD,CAAP;AACD,OAbD,EAcCU,KAdD,CAcOC,KAAK,IAAI;AACdhB,QAAAA,MAAM,CAAC,EAAD,CAAN;AACD,OAhBD;AAiBD,KAlBkB,CAAnB;AAmBAM,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBV,MAAzB;AACA,WAAO;AAACoB,MAAAA,QAAQ,EAAEpB;AAAX,KAAP;AACD;;AACDqB,EAAAA,MAAM,GAAI;AACR,UAAMD,QAAQ,GAAG,KAAKE,KAAL,CAAWF,QAA5B;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBU,QAAxB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF;AAMD;;AAlCgC;;AAmClC,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAexB,IAAf","sourcesContent":["import React from 'react';\nimport firebase from '../../lib/database/config/fbConfig.js'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nclass Shop extends React.Component {\n  static async getInitialProps() {\n    let db = await firebase()\n    let result = await new Promise((resolve, reject) => {\n      db.firestore().collection('products')\n      .get()\n      .then(snapshot => {\n        console.log('snapshot', snapshot)\n        let data = []\n        snapshot.forEach((doc) => {\n          data.push(\n            Object.assign({\n            id: doc.id\n          }, doc.data())\n          )\n        })\n        resolve(snapshot)\n      })\n      .catch(error => {\n        reject([])\n      })\n    })\n    console.log('resultttt', result)\n    return {products: result}\n  }\n  render () {\n    const products = this.props.products\n    console.log('asdfasdf', products)\n    return (\n      <div>\n        <h1>Shop Component</h1>\n\n      </div>\n    );\n  }\n};\n\n// Shop.propTypes = {\n//   storeItems: PropTypes.array.isRequired\n// }\n\n// const mapStateToProps = state => {\n//   console.log('HI FROM STATE', state)\n//   return {\n//     storeItems: state.storeItems.storeItems\n//   }\n// }\n\n// //use compose function to use two HOC (higher order components)\n// export default compose(\n//   //automatically retrieves data from firestore when this component is active\n//   firestoreConnect(['products']),\n//   connect(mapStateToProps)\n// )(Shop);\n\nexport default Shop\n"]},"metadata":{},"sourceType":"module"}