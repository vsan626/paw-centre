{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport storeReducers from '../reducers/index';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from '../../lib/database/config/fbConfig'; // create a makeStore function\n\nconst initialState = {}; // const middleware = [thunk];\n\nconst makeStore = createStore(storeReducers, initialState, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(fbConfig), reactReduxFirebase(firebase, fbConfig))); // export an assembled wrapper\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["/Users/vaisan/Downloads/paw-centre/redux/store/store.js"],"names":["createStore","applyMiddleware","compose","createWrapper","storeReducers","thunk","reduxFirestore","getFirestore","reactReduxFirebase","getFirebase","fbConfig","initialState","makeStore","withExtraArgument","firebase","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,sBAAhD;AACA,OAAOC,QAAP,MAAqB,oCAArB,C,CACA;;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CACA;;AAEA,MAAMC,SAAS,GAAGZ,WAAW,CACzBI,aADyB,EAEzBO,YAFyB,EAGzBT,OAAO,CACLD,eAAe,CAACI,KAAK,CAACQ,iBAAN,CAAwB;AAAEJ,EAAAA,WAAF;AAAeF,EAAAA;AAAf,CAAxB,CAAD,CADV,EAELD,cAAc,CAACI,QAAD,CAFT,EAGLF,kBAAkB,CAACM,QAAD,EAAWJ,QAAX,CAHb,CAHkB,CAA7B,C,CAUA;;AACA,OAAO,MAAMK,OAAO,GAAGZ,aAAa,CAACS,SAAD,EAAY;AAAEI,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport storeReducers from '../reducers/index';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from '../../lib/database/config/fbConfig'\n// create a makeStore function\n\nconst initialState = {};\n// const middleware = [thunk];\n\nconst makeStore = createStore(\n    storeReducers,\n    initialState,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(fbConfig),\n      reactReduxFirebase(firebase, fbConfig)\n    )\n  );\n\n// export an assembled wrapper\nexport const wrapper = createWrapper(makeStore, { debug: true });\n"]},"metadata":{},"sourceType":"module"}