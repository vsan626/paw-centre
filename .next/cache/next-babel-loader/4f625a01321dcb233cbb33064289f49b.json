{"ast":null,"code":"import { createStore } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport rootReducer from './../redux/reducers/index';\nimport thunk from 'redux-thunk';\nimport fbConfig from '../lib/database/config/fbConfig';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { applyMiddleware, compose } from 'redux';\nimport { getFirebase } from 'react-redux-firebase';\nvar initialState = {};\nexport var newStore = function newStore() {\n  return createStore(rootReducer, initialState, compose(applyMiddleware(thunk.withExtraArgument({\n    getFirebase: getFirebase,\n    getFirestore: getFirestore\n  })), reduxFirestore(fbConfig)));\n};\nexport var wrapper = createWrapper(newStore, {\n  debug: true\n});","map":{"version":3,"sources":["/Users/vaisan/Downloads/paw-centre/redux/index.js"],"names":["createStore","createWrapper","rootReducer","thunk","fbConfig","reduxFirestore","getFirestore","applyMiddleware","compose","getFirebase","initialState","newStore","withExtraArgument","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,IAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAK;AAC3B,SAAOX,WAAW,CAChBE,WADgB,EAEhBQ,YAFgB,EAGhBF,OAAO,CACLD,eAAe,CAACJ,KAAK,CAACS,iBAAN,CAAwB;AAAEH,IAAAA,WAAW,EAAXA,WAAF;AAAeH,IAAAA,YAAY,EAAZA;AAAf,GAAxB,CAAD,CADV,EAELD,cAAc,CAACD,QAAD,CAFT,CAHS,CAAlB;AAQD,CATM;AAWP,OAAO,IAAMS,OAAO,GAAGZ,aAAa,CAACU,QAAD,EAAW;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAX,CAA7B","sourcesContent":["import { createStore } from 'redux'\nimport { createWrapper } from 'next-redux-wrapper';\nimport rootReducer from './../redux/reducers/index'\nimport thunk from 'redux-thunk'\nimport fbConfig from '../lib/database/config/fbConfig'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { applyMiddleware, compose } from 'redux';\nimport { getFirebase } from 'react-redux-firebase'\n\n\nconst initialState = {}\n\nexport const newStore = () =>{\n  return createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(fbConfig),\n  )\n  )\n}\n\nexport const wrapper = createWrapper(newStore, { debug: true });"]},"metadata":{},"sourceType":"module"}