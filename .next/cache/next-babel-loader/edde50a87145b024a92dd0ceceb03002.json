{"ast":null,"code":"var _jsxFileName = \"/Users/vaisan/Downloads/paw-centre/pages/shop/shop.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ShopDisplay from '../../components/shop/ShopDisplay';\nimport loadFirebase from '../../lib/database/config/fbConfig.js';\nimport { connect } from 'react-redux';\nimport { GET_FIRESTORE_DATA } from '../../redux/types/types.js';\nimport actions from '../../redux/actions/storeActions.js';\nimport Router from 'next/router';\n\nclass Shop extends React.Component {\n  //gets initial data from firestore and stores it into props\n  static async getInitialProps() {\n    let firebase = await loadFirebase();\n    let result = await new Promise((resolve, reject) => {\n      firebase.firestore().collection('products').get().then(snapshot => {\n        let data = [];\n        snapshot.forEach(doc => {\n          data.push(Object.assign({\n            id: doc.id\n          }, doc.data()));\n        });\n        resolve(data);\n      }).catch(error => {\n        console.log(error);\n        reject([]);\n      });\n    }); //need to send data to redux store\n\n    return dispatch => {\n      dispatch({\n        type: GET_FIRESTORE_DATA,\n        payload: result\n      });\n    };\n  }\n\n  render() {\n    const products = this.props.products;\n    console.log('products', products);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, \"Shop route page\", __jsx(ShopDisplay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Shop;","map":{"version":3,"sources":["/Users/vaisan/Downloads/paw-centre/pages/shop/shop.jsx"],"names":["React","ShopDisplay","loadFirebase","connect","GET_FIRESTORE_DATA","actions","Router","Shop","Component","getInitialProps","firebase","result","Promise","resolve","reject","firestore","collection","get","then","snapshot","data","forEach","doc","push","Object","assign","id","catch","error","console","log","dispatch","type","payload","render","products","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AACjC;AACA,eAAaC,eAAb,GAA+B;AAC7B,QAAIC,QAAQ,GAAG,MAAMR,YAAY,EAAjC;AACA,QAAIS,MAAM,GAAG,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAClDJ,MAAAA,QAAQ,CACLK,SADH,GAEGC,UAFH,CAEc,UAFd,EAGGC,GAHH,GAIGC,IAJH,CAISC,QAAD,IAAc;AAClB,YAAIC,IAAI,GAAG,EAAX;AACAD,QAAAA,QAAQ,CAACE,OAAT,CAAkBC,GAAD,IAAS;AACxBF,UAAAA,IAAI,CAACG,IAAL,CACEC,MAAM,CAACC,MAAP,CACE;AACEC,YAAAA,EAAE,EAAEJ,GAAG,CAACI;AADV,WADF,EAIEJ,GAAG,CAACF,IAAJ,EAJF,CADF;AAQD,SATD;AAUAP,QAAAA,OAAO,CAACO,IAAD,CAAP;AACD,OAjBH,EAkBGO,KAlBH,CAkBUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAd,QAAAA,MAAM,CAAC,EAAD,CAAN;AACD,OArBH;AAsBD,KAvBkB,CAAnB,CAF6B,CA0B7B;;AACA,WAAQiB,QAAD,IAAc;AACnBA,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE5B,kBAAP;AAA2B6B,QAAAA,OAAO,EAAEtB;AAApC,OAAD,CAAR;AACD,KAFD;AAGD;;AAEDuB,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA5B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,QAAxB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA3CgC;;AA8CnC,eAAe5B,IAAf","sourcesContent":["import React from 'react';\nimport ShopDisplay from '../../components/shop/ShopDisplay';\nimport loadFirebase from '../../lib/database/config/fbConfig.js';\nimport { connect } from 'react-redux';\nimport { GET_FIRESTORE_DATA } from '../../redux/types/types.js'\nimport actions from '../../redux/actions/storeActions.js'\nimport Router from 'next/router'\n\nclass Shop extends React.Component {\n  //gets initial data from firestore and stores it into props\n  static async getInitialProps() {\n    let firebase = await loadFirebase();\n    let result = await new Promise((resolve, reject) => {\n      firebase\n        .firestore()\n        .collection('products')\n        .get()\n        .then((snapshot) => {\n          let data = [];\n          snapshot.forEach((doc) => {\n            data.push(\n              Object.assign(\n                {\n                  id: doc.id\n                },\n                doc.data()\n              )\n            );\n          });\n          resolve(data);\n        })\n        .catch((error) => {\n          console.log(error);\n          reject([]);\n        });\n    });\n    //need to send data to redux store\n    return (dispatch) => {\n      dispatch({type: GET_FIRESTORE_DATA, payload: result })\n    };\n  }\n\n  render() {\n    const products = this.props.products;\n    console.log('products', products);\n    return (\n      <div>\n        Shop route page\n        <ShopDisplay />\n      </div>\n    );\n  }\n}\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}